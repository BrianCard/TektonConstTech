        [HttpPost("facebook/register")]
        [AllowAnonymous]
        public ActionResult<ItemResponse<int>> CreateFb(UserThirdPartyAddRequest model)
        {
            ObjectResult result = null;

            try
            {
                int id = _userService.AddThirdParty(model);
                _emailService.SendWelcomeEmail(model.Email, model.AccessToken);
                ItemResponse<int> response = new ItemResponse<int>() { Item = id };
                result = Created201(response);
            }
            catch (Exception ex)
            {
                Logger.LogError(ex.ToString());
                ErrorResponse response = new ErrorResponse(ex.Message);
                result = StatusCode(500, response);
            }
            return result;
        }

        [HttpPost("facebook/login")]
        [AllowAnonymous]
        public async Task<ActionResult<SuccessResponse>> FacebookLogInAsync(UserThirdPartyLoginRequest model)
        {
            int iCode = 200;
            BaseResponse response = null;
            try
            {
                string token = _userService.GetAccessToken(model.Email);
                if (token != null)
                {
                    bool loggedIn = await _userService.ThirdPartyLogInAsync(model.Email);
                    if (loggedIn)
                    {
                        response = new SuccessResponse();
                    }
                    else
                    {
                        iCode = 401;
                        response = new ErrorResponse("No record found");
                    }
                }
            }
            catch (Exception ex)
            {
                base.Logger.LogError(ex.Message);
                return StatusCode(401, new ErrorResponse(ex.Message));
            }
            return StatusCode(iCode, response);
        }
